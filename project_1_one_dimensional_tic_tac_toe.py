# -*- coding: utf-8 -*-
"""Project 1 : One-dimensional tic-tac-toe

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10QCghILYSHWdGJT2hziAOkWdAtxLDwOC
"""

def evaluate(board):
    # Check if "x" has won
    if "xxx" in board:
        return "x"

    # Check if "o" has won
    if "ooo" in board:
        return "o"

    # Check if the board is full (draw)
    if "-" not in board:
        return "!"

    # If none of the above conditions are met, the game is not finished
    return "-"

def move(board, mark, position):
    # Convert the board string to a list for easier manipulation
    board = list(board)

    # Place the mark in the given position
    board[position] = mark

    # Convert the board list back to a string and return it
    return "".join(board)

def player_move(board):
    while True:
        position = int(input("Enter the position (0-19) where you want to play: "))

        if 0 <= position <= 19 and board[position] == "-":
            return move(board, "x", position)

        print("Invalid position or position already occupied. Please choose another position.")

def pc_move(board):
    available_positions = [pos for pos in range(20) if board[pos] == "-"]

    # Check for winning moves for the computer
    for position in available_positions:
        new_board = move(board, "o", position)
        if evaluate(new_board) == "o":
            return new_board

    # Check for winning moves for the player and block them
    for position in available_positions:
        new_board = move(board, "x", position)
        if evaluate(new_board) == "x":
            return move(board, "o", position)

    # If no winning or blocking moves are available, make a random move
    return move(board, "o", random.choice(available_positions))

def tictactoe():
    board = "-" * 20
    turn = 1

    while True:
        print("Current Board:")
        print(board)

        if turn % 2 == 1:
            board = player_move(board)
        else:
            board = pc_move(board)

        result = evaluate(board)
        if result != "-":
            print("Game Over")

            if result == "x":
                print("Player wins!")
            elif result == "o":
                print("Computer wins!")
            else:
                print("It's a draw!")

            break

        turn += 1

# Call the tictactoe function to start the game
tictactoe()